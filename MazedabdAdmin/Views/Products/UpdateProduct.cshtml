@model MZ.Models.AdminViewModel
@{
    ViewBag.Title = "UpdateProduct";
}


<style>
    option {
        background-color: #6f6f6f;
    }
</style>

<nav aria-label="breadcrumb" role="navigation">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="~/Home/Index">Home</a></li>
        <li class="breadcrumb-item"><a href="~/Products/Index">Products</a></li>
        <li class="breadcrumb-item active" aria-current="page">Update Product</li>
    </ol>
</nav>

<header class="content__title">
    <h1>Property</h1>
    <div class="actions">
        <a href="~/Products/Index" class="actions__item zmdi zmdi-view-list zmdi-hc-fw" title="Back to List"></a>
        <a href="~/Products/UpdateProduct/@Model.Product.Id" class="actions__item zmdi zmdi-refresh zmdi-hc-fw" title="Refresh"></a>
    </div>
</header>

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("UpdateProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.Product.Id)
            @Html.HiddenFor(model => model.Product.ProductCategoryId)
            @Html.HiddenFor(model => model.Product.SubCategoryId)
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductName, new { @class = "card-body__title" })
                    @Html.TextBoxFor(model => model.Product.ProductName, new { @class = "form-control", placeHolder = "Property Name" })
                    @Html.ValidationMessageFor(model => model.Product.ProductName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Price, new { @class = "card-body__title" })
                    @Html.TextBoxFor(model => model.Product.Price, new { @class = "form-control", placeHolder = "Property Name" })
                    @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.DiscountPrice, new { @class = "card-body__title" })
                    @Html.TextBoxFor(model => model.Product.DiscountPrice, new { @class = "form-control", placeHolder = "Property Name" })
                    @Html.ValidationMessageFor(model => model.Product.DiscountPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Description, new { @class = "card-body__title" })
                    @Html.TextBoxFor(model => model.Product.Description, new { @class = "form-control", placeHolder = "Property Name" })
                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ShortDetails, new { @class = "card-body__title" })
                    @Html.TextBoxFor(model => model.Product.ShortDetails, new { @class = "form-control", PlaceHolder = "Short details about the project" })
                    @Html.ValidationMessageFor(model => model.Product.ShortDetails, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ImageUrl, new { @class = "card-body__title" })
                    <div class="card">
                        <div class="card-body">
                            <span class="control-label col-md-2">Upload Images:</span>
                            <div class="col-md-10">
                                @*<input type="file" name="files" id="files" />*@
                                @Html.TextBoxFor(model => model.File, new { type = "file", id = "file" })
                                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCategory.Name, new { @class = "card-body__title" })
                    @Html.DropDownListFor(model => model.Product.ProductCategoryId, ViewBag.CategoryList as SelectList, "Category Names", new { @class = "form-control ddlbg",id = "category", onchange= "LoadSubcategory(this.value)" })
                    @Html.ValidationMessageFor(model => model.Product.ProductCategoryId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.SubCategoryId, new { @class = "card-body__title" })
                    @Html.DropDownListFor(model => model.Product.SubCategoryId, Enumerable.Empty<SelectListItem>(), "Category Names", new { @class = "form-control ddlbg", id="subCategory" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        }
    </div>
</div>
<script>
    function LoadSubcategory(value) {
        var category = $("#category").find("option:selected").val();
        $.ajax({
            type: "GET",
            url: "/Products/LoadSubCategoryByCategoryId?id=" + category,
            contentType: 'application/json; charset=utf-8',
            success: function(response) {
                if (response != null) {
                    var s = '<option value="">Please Select a Sub Category</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].Id + '">' + response[i].Name + '</option>';
                    }
                    $("#subCategory").html(s);
                }
            }
        });
    }
</script>